'''
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
'''
import os
import sys

from pathlib import Path

from dotenv import load_dotenv

from django.contrib.messages import constants as messages


MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

sys.modules['fontawesome_free'] = __import__('fontawesome-free')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load the env to the environment variables
load_dotenv(os.path.join(BASE_DIR, '../conf/env/env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# resolve SESSION_COOKIE_NAME conflict if there are 2 django application on localhost
SESSION_COOKIE_NAME = "mycookie"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEPLOYMENT') != 'True'

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webthingstalk.apps.WebThingsTalkConfig',
    'fontawesome_free',
    'development',  # override template should place before xtalk_template
    'xtalk_template'
]
if DEBUG == True:
    INSTALLED_APPS.append('sslserver')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': os.getenv('DATABASE_HOST'),
            'PORT': os.getenv('DATABASE_PORT'),
            'NAME': os.getenv('DATABASE_NAME'),
            'USER': os.getenv('DATABASE_USER'),
            'PASSWORD': os.getenv('DATABASE_PASSWORD'),
            # Set the SQL mode to STRICT_ALL_TABLES.
            # This is not a mandatory option but Django recommends.
            #
            # Ref: https://docs.djangoproject.com/en/3.1/ref/databases/#setting-sql-mode
            # Ref: https://tinyurl.com/m9fckp4y (MySQL official documentation)
            'OPTIONS': {
                'sql_mode': 'STRICT_ALL_TABLES',
            },
        },
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'mystatic'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django X Talk Template
AUTH_USER_MODEL = 'development.User'
REFRESHTOKEN_MODEL = 'development.RefreshToken'
ACCESSTOKEN_MODEL = 'development.AccessToken'

XTALK_OAUTH2_CLIENT_ID = os.getenv('OAUTH2_CLIENT_ID')
XTALK_OAUTH2_CLIENT_SECRET = os.getenv('OAUTH2_CLIENT_SECRET')
XTALK_OAUTH2_REDIRECT_URI = os.getenv('OAUTH2_REDIRECT_URI')
XTALK_ACCOUNT_HOST = os.getenv('ACCOUNT_HOST')
XTALK_OIDC_DISCOVERY_ENDPOINT = os.getenv('OIDC_DISCOVERY_ENDPOINT')
XTALK_OAUTH2_AUTHORIZATION_ENDPOINT = os.getenv(
    'OAUTH2_AUTHORIZATION_ENDPOINT')
XTALK_OAUTH2_TOKEN_ENDPOINT = os.getenv('OAUTH2_TOKEN_ENDPOINT')
XTALK_OAUTH2_REVOCATION_ENDPOINT = os.getenv('OAUTH2_REVOCATION_ENDPOINT')

# WebThingsTalk
IOTTALK_URI = os.getenv('IOTTALK_URI')
WEBTHINGSTALK_URI = os.getenv('WEBTHINGSTALK_URI')
DEFAULT_GATEWAY_URI = os.getenv('DEFAULT_GATEWAY_URI')
DEFAULT_GATEWAY_USERNAME = os.getenv('DEFAULT_GATEWAY_USERNAME')
DEFAULT_GATEWAY_PASSWORD = os.getenv('DEFAULT_GATEWAY_PASSWORD')
